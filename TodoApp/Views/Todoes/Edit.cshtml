@*index	とは違い、リストではなく一つのTodoをうけとっている。*@
@model TodoApp.Models.Todo

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/_LayoutPage1.cshtml";
}

<h2>Edit</h2>

@*BeginFormはブロック内をFormタグでくくる。
form内はHTTPヘルパーを使って入力フォームを生成している。*@
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Todo</h4>
        <hr />
        @*入力チェックのエラーメッセージが出力*@
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@*HiddenFor→Hiddenタグ生成
		ここでは、TodoのIDを保持*@
		@Html.HiddenFor(model => model.Id)

        <div class="form-group">
			@*LabelFor→Labelタグを生成。DisplayNameを表示したうえで、Labelでくくられる*@
			@Html.LabelFor(model => model.Summary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
				@*EditorFor→プロパティの型に応じたタグを生成。String→テキストボックス
					Datetime→入力内容が日付となっているかのチェックが自動的に実装されている
					Todoにデータアノテーションを設定→細かな入力チェックが可能*@
				@Html.EditorFor(model => model.Summary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Summary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Detail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Limit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Limit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Limit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Done, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Done)
                    @Html.ValidationMessageFor(model => model.Done, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@*入力チェックで利用*@
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
